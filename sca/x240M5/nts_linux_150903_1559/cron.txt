#==[ Verification ]=================================#
# rpm -V cron-4.2-55.3.x86_64
# Verification Status: Passed

#==[ Command ]======================================#
# /bin/systemctl status cron.service
cron.service - Command Scheduler
   Loaded: loaded (/usr/lib/systemd/system/cron.service; enabled)
   Active: active (running) since Thu 2015-09-03 15:35:28 MDT; 25min ago
 Main PID: 5885 (cron)
   CGroup: /system.slice/cron.service
           `-5885 /usr/sbin/cron -n

Sep 03 15:35:28 linux cron[5885]: (CRON) INFO (RANDOM_DELAY will be scaled with factor 40% if used.)
Sep 03 15:35:28 linux cron[5885]: (CRON) INFO (running with inotify support)
Sep 03 15:45:01 linux cron[6832]: pam_unix(crond:session): session opened for user root by (uid=0)
Sep 03 16:00:01 linux cron[23104]: pam_unix(crond:session): session opened for user root by (uid=0)

#==[ Configuration File ]===========================#
# /var/spool/cron/allow - File not found

#==[ Configuration File ]===========================#
# /var/spool/cron/deny - File not found

### Individual User Cron Jobs ###
### System Cron Job File List ###
#==[ Command ]======================================#
# /bin/find -L /etc/cron.d/ -type f

#==[ Command ]======================================#
# /bin/find -L /etc/cron.hourly/ -type f
/etc/cron.hourly/suse.de-snapper

#==[ Command ]======================================#
# /bin/find -L /etc/cron.daily/ -type f
/etc/cron.daily/suse-clean_catman
/etc/cron.daily/logrotate
/etc/cron.daily/mdadm
/etc/cron.daily/suse.de-cron-local
/etc/cron.daily/suse-do_mandb
/etc/cron.daily/suse.de-backup-rc.config
/etc/cron.daily/suse.de-backup-rpmdb
/etc/cron.daily/packagekit-background.cron
/etc/cron.daily/suse.de-snapper
/etc/cron.daily/suse.de-check-battery

#==[ Command ]======================================#
# /bin/find -L /etc/cron.weekly/ -type f
/etc/cron.weekly/btrfs-trim.sh
/etc/cron.weekly/btrfs-balance.sh

#==[ Command ]======================================#
# /bin/find -L /etc/cron.monthly/ -type f
/etc/cron.monthly/btrfs-scrub.sh

### System Cron Job File Content ###
#==[ Configuration File ]===========================#
# /etc/crontab
SHELL=/bin/sh
PATH=/usr/bin:/usr/sbin:/sbin:/bin:/usr/lib/news/bin
MAILTO=root
-*/15 * * * *   root  test -x /usr/lib/cron/run-crons && /usr/lib/cron/run-crons >/dev/null 2>&1


#==[ Configuration File ]===========================#
# /etc/cron.hourly/suse.de-snapper
umask 022
PATH=/sbin:/bin:/usr/sbin:/usr/bin
export PATH
if [ -f /etc/sysconfig/snapper ] ; then
    . /etc/sysconfig/snapper
fi
for CONFIG in $SNAPPER_CONFIGS ; do
    TIMELINE_CREATE="no"
    . /etc/snapper/configs/$CONFIG
    if [ "$TIMELINE_CREATE" = "yes" ] ; then
	snapper --config=$CONFIG --quiet create --description="timeline" --cleanup-algorithm="timeline"
    fi
done
exit 0


#==[ Configuration File ]===========================#
# /etc/cron.daily/suse-clean_catman
umask 022
PATH=/sbin:/bin:/usr/sbin:/usr/bin
export PATH
if [ -f /etc/sysconfig/cron ] ; then
    . /etc/sysconfig/cron
fi
if test "$DELETE_OLD_CATMAN" = yes ; then
    if test -z "$CATMAN_ATIME" ; then
	CATMAN_ATIME=7
    fi
    test -e /var/cache/man -a -x /usr/bin/safe-rm && \
	find /var/cache/man -name '*.gz' -type f -atime +$CATMAN_ATIME  -print0 | \
	xargs --no-run-if-empty --max-lines=200 --null -- /usr/bin/safe-rm
fi
exit 0


#==[ Configuration File ]===========================#
# /etc/cron.daily/logrotate
if checkproc /usr/sbin/logrotate; then
	/bin/logger -p cron.warning -t logrotate "ALERT another instance of logrotate is running - exiting"
	exit 1
fi
TMPF=`mktemp /tmp/logrotate.XXXXXXXXXX`
/usr/sbin/logrotate /etc/logrotate.conf 2>&1 | tee $TMPF
EXITVALUE=${PIPESTATUS[0]}
if [ $EXITVALUE != 0 ]; then
    sleep 1
    /bin/logger -p cron.warning -t logrotate "ALERT exited abnormally with [$EXITVALUE]"
    /bin/logger -p cron.warning -t logrotate -f $TMPF
 fi
rm -f $TMPF
exit 0


#==[ Configuration File ]===========================#
# /etc/cron.daily/mdadm
mdadm_BIN=/sbin/mdadm
mdadm_CONFIG=/etc/sysconfig/mdadm
[ -x $mdadm_BIN ] || exit 0
[ -r $mdadm_CONFIG ] && . $mdadm_CONFIG
if [ x$MDADM_MAIL != x"" ]; then
  MDADM_MAIL="-m \"$MDADM_MAIL\""
fi
if [ x$MDADM_PROGRAM != x"" ]; then
  MDADM_PROGRAM="-p \"$MDADM_PROGRAM\""
fi
if [ x$MDADM_SCAN = x"yes" ]; then
  MDADM_SCAN="-s"
else
  MDADM_SCAN=""
fi
if [ x$MDADM_CONFIG != x"" ]; then
  MDADM_CONFIG="-c \"$MDADM_CONFIG\""
fi
eval $mdadm_BIN -F $MDADM_RAIDDEVICES --oneshot --syslog $MDADM_MAIL $MDADM_PROGRAM $MDADM_SCAN $MDADM_SEND_MAIL $MDADM_CONFIG 
exit 0


#==[ Configuration File ]===========================#
# /etc/cron.daily/suse.de-cron-local
umask 022
PATH=/sbin:/bin:/usr/sbin:/usr/bin
export PATH
if [ -f /root/bin/cron.daily.local ] ; then
    . /root/bin/cron.daily.local
fi
exit 0


#==[ Configuration File ]===========================#
# /etc/cron.daily/suse-do_mandb
umask 022
PATH=/sbin:/bin:/usr/sbin:/usr/bin
export PATH
if test -f /etc/sysconfig/cron ; then
    . /etc/sysconfig/cron
fi
if test "$REINIT_MANDB" = yes ; then
    if type -p mandb > /dev/null 2>&1 ; then
	typeset -r manpaths=$(manpath -g)
	typeset -i errors=0
	renice   +5 -p $$ > /dev/null || true
	ionice -c 3 -p $$ > /dev/null || true
	unset MANPATH
	IFS=:
	for mp in $manpaths; do
	    test -d "${mp}" || continue
	    cp=$(MANPATH=$mp manpath -qc)
	    test -n "${cp}" || continue
	    test -d "${cp}" || continue
	    db=${cp}/index.db
	    if test -e ${db} ; then
		find $mp -follow -newer $db | read -t 1 line
		test $? -eq 0 || continue
	    fi
	    nice -n 5 ionice -c 3 mandb -qs ${mp} > /dev/null 2>&1 || let errors++
	done
	if test $errors -ne 0 ; then
	    echo There seem to be trouble with mandb.
	    echo
	    echo please run mandb and check the output...
	fi
    fi
    if type -p makewhatis > /dev/null 2>&1 ; then
	makewhatis
    fi
fi
exit 0


#==[ Configuration File ]===========================#
# /etc/cron.daily/suse.de-backup-rc.config
umask 022
PATH=/sbin:/bin:/usr/sbin:/usr/bin
export PATH
if [ -f /etc/sysconfig/backup ] ; then
    . /etc/sysconfig/backup
fi
if test -n "$RCCONFIG_BACKUP_DIR" -a -e /etc/sysconfig ; then
    mkdir -p $RCCONFIG_BACKUP_DIR
    OLD_MD5=""
    ETC_RCCONFIG=""
    test -f /etc/rc.config && ETC_RCCONFIG="/etc/rc.config"
    test -e $RCCONFIG_BACKUP_DIR/sysconfig_recent_md5 && \
        OLD_MD5="`cat $RCCONFIG_BACKUP_DIR/sysconfig_recent_md5`"
    NEW_MD5="`find $ETC_RCCONFIG /etc/sysconfig -type f | xargs cat | md5sum`"
    if test "$OLD_MD5" != "$NEW_MD5" ; then
        DATESTRING=`date +"%Y%m%d"`
        NEWNAME=$RCCONFIG_BACKUP_DIR/sysconfig-$DATESTRING.tar.gz
        NUMBER=2
        while [ -e $NEWNAME ] ; do
            NEWNAME=$RCCONFIG_BACKUP_DIR/sysconfig-$DATESTRING-$NUMBER.tar.gz
            NUMBER=`expr $NUMBER + 1`
        done
        if tar czfp $NEWNAME $ETC_RCCONFIG /etc/sysconfig 2>/dev/null ; then
            echo "$NEW_MD5" > $RCCONFIG_BACKUP_DIR/sysconfig_recent_md5
            test "$MAX_RCCONFIG_BACKUPS" -gt 0 2> /dev/null || MAX_RCCONFIG_BACKUPS=0
            NUMBER=1
            for BACKUPFILE in `ls -1 -t $RCCONFIG_BACKUP_DIR/sysconfig-*` ; do
                if test "$NUMBER" -gt "$MAX_RCCONFIG_BACKUPS" ; then
                    rm -f $BACKUPFILE
                fi
                NUMBER=`expr $NUMBER + 1`
            done
        else
            echo "ERROR!! can not backup sysconfig files"
	    echo "to $RCCONFIG_BACKUP_DIR."
            echo "Maybe there is not enough disk space."
            rm -f $NEWNAME
        fi
    fi
fi
exit 0


#==[ Configuration File ]===========================#
# /etc/cron.daily/suse.de-backup-rpmdb
umask 022
PATH=/sbin:/bin:/usr/sbin:/usr/bin
export PATH
if [ -f /etc/sysconfig/backup ] ; then
    . /etc/sysconfig/backup
fi
PACKAGEDBFILE=packages.rpm
if test -e /var/lib/rpm/Packages ; then
    PACKAGEDBFILE=Packages
fi
if test -n "$RPMDB_BACKUP_DIR" -a -e /var/lib/rpm/$PACKAGEDBFILE ; then
    mkdir -p $RPMDB_BACKUP_DIR
    OLD_MD5=""
    test -e $RPMDB_BACKUP_DIR/rpmdb_recent_md5 && \
        OLD_MD5="`cat $RPMDB_BACKUP_DIR/rpmdb_recent_md5`"
    NEW_MD5="`cat /var/lib/rpm/$PACKAGEDBFILE | md5sum`"
    if test "$OLD_MD5" != "$NEW_MD5" ; then
        DATESTRING=`date +"%Y%m%d"`
        NEWNAME=$RPMDB_BACKUP_DIR/$PACKAGEDBFILE-$DATESTRING
        NUMBER=2
        while [ -e $NEWNAME -o -e $NEWNAME.gz ] ; do
            NEWNAME=$RPMDB_BACKUP_DIR/$PACKAGEDBFILE-$DATESTRING-$NUMBER
            NUMBER=`expr $NUMBER + 1`
        done
        if gzip -9 < /var/lib/rpm/$PACKAGEDBFILE > $NEWNAME.gz; then
            echo "$NEW_MD5" > $RPMDB_BACKUP_DIR/rpmdb_recent_md5
            test "$MAX_RPMDB_BACKUPS" -gt 0 2> /dev/null || MAX_RPMDB_BACKUPS=0
            NUMBER=1
            for BACKUPFILE in `ls -1 -t $RPMDB_BACKUP_DIR/$PACKAGEDBFILE-*` ; do
                if test "$NUMBER" -gt "$MAX_RPMDB_BACKUPS" ; then
                    rm -f $BACKUPFILE
                fi
                NUMBER=`expr $NUMBER + 1`
            done
        else
            echo "ERROR!! can not backup RPM Database to $RPMDB_BACKUP_DIR."
            echo "Maybe there is not enough disk space."
            rm -f $NEWNAME $NEWNAME.gz
        fi
    fi
fi
exit 0


#==[ Configuration File ]===========================#
# /etc/cron.daily/packagekit-background.cron
[ -f /etc/sysconfig/packagekit-background ] && . /etc/sysconfig/packagekit-background
if [ "$ENABLED" = "no" ]; then
	exit 0
fi
[ -z "$SYSTEM_NAME" ] && SYSTEM_NAME=$(hostname)
PKTMP=$(mktemp /var/run/packagekit-cron.XXXXXX)
PKCON_OPTIONS="--background --noninteractive --plain"
[ -z "$SLEEP_MAX" ] && SLEEP_MAX=$RANDOM
sleep $(( $RANDOM % $SLEEP_MAX + 1 ))
if [ "$CHECK_ONLY" = "yes" ]; then
	pkcon $PKCON_OPTIONS get-updates &> $PKTMP
	PKCON_RETVAL=$?
else
	pkcon $PKCON_OPTIONS update &> $PKTMP
	PKCON_RETVAL=$?
fi
if [ $PKCON_RETVAL -ne 5 ]; then
	if [ -n "$MAILTO" ]; then
		mail -s "System updates available: $SYSTEM_NAME" $MAILTO < $PKTMP
	else
		cat $PKTMP
	fi
fi
rm -f $PKTMP


#==[ Configuration File ]===========================#
# /etc/cron.daily/suse.de-snapper
umask 022
PATH=/sbin:/bin:/usr/sbin:/usr/bin
export PATH
if [ -f /etc/sysconfig/snapper ] ; then
    . /etc/sysconfig/snapper
fi
for CONFIG in $SNAPPER_CONFIGS ; do
    NUMBER_CLEANUP="no"
    TIMELINE_CLEANUP="no"
    EMPTY_PRE_POST_CLEANUP="no"
    . /etc/snapper/configs/$CONFIG
    if [ "$NUMBER_CLEANUP" = "yes" ] ; then
	snapper --config=$CONFIG --quiet cleanup number
    fi
    if [ "$TIMELINE_CLEANUP" = "yes" ] ; then
	snapper --config=$CONFIG --quiet cleanup timeline
    fi
    if [ "$EMPTY_PRE_POST_CLEANUP" = "yes" ] ; then
	snapper --config=$CONFIG --quiet cleanup empty-pre-post
    fi
done
exit 0


#==[ Configuration File ]===========================#
# /etc/cron.daily/suse.de-check-battery
umask 022
PATH=/sbin:/bin:/usr/sbin:/usr/bin
export PATH
test -r /proc/driver/rtc && \
    BATT_STATUS=$(awk '$1 == "batt_status" { print $3 }' /proc/driver/rtc)
test -r /proc/rtc && \
    BATT_STATUS=$(awk '$1 == "batt_status" { print $3 }' /proc/rtc)
test -n "$BATT_STATUS" -a "$BATT_STATUS" != "okay" && \
    echo "CMOS battery empty -- expect problems"
exit 0


#==[ Configuration File ]===========================#
# /etc/cron.weekly/btrfs-trim.sh
umask 022
PATH=/sbin:/bin:/usr/sbin:/usr/bin
export PATH
if [ -f /etc/sysconfig/btrfsmaintenance ] ; then
    . /etc/sysconfig/btrfsmaintenance
fi
LOGIDENTIFIER='btrfs-trim'
{
OIFS="$IFS"
IFS=:
for MNT in $BTRFS_TRIM_MOUNTPOINTS; do
	IFS="$OIFS"
	if [ $(stat -f --format=%T "$MNT") != "btrfs" ]; then
		echo "Path $MNT is not btrfs, skipping"
		continue
	fi
	echo "Running fstrim on $MNT"
	/usr/sbin/fstrim "$MNT"
done
} | \
case "$BTRFS_LOG_OUTPUT" in
	stdout) cat;;
	journal) sytemd-cat -t "$LOGIDENTIFIER";;
	*) cat;;
esac
exit 0


#==[ Configuration File ]===========================#
# /etc/cron.weekly/btrfs-balance.sh
umask 022
PATH=/sbin:/bin:/usr/sbin:/usr/bin
export PATH
if [ -f /etc/sysconfig/btrfsmaintenance ] ; then
	. /etc/sysconfig/btrfsmaintenance
fi
LOGIDENTIFIER='btrfs-balance'
{
OIFS="$IFS"
IFS=:
for MM in $BTRFS_BALANCE_MOUNTPOINTS; do
	IFS="$OIFS"
	if [ $(stat -f --format=%T "$MM") != "btrfs" ]; then
		echo "Path $MM is not btrfs, skipping"
		continue
	fi
	echo "Before balance of $MM"
	btrfs filesystem df "$MM"
	df -H "$MM"
	btrfs balance start -dusage=0 "$MM"
	for BB in $BTRFS_BALANCE_DUSAGE; do
		btrfs balance start -v -dusage=$BB "$MM"
	done
	btrfs balance start -musage=0 "$MM"
	for BB in $BTRFS_BALANCE_MUSAGE; do
		btrfs balance start -v -musage="$BB" "$MM"
	done
	echo "After balance of $MM"
	btrfs filesystem df "$MM"
	df -H "$MM"
done
} | \
case "$BTRFS_LOG_OUTPUT" in
	stdout) cat;;
	journal) sytemd-cat -t "$LOGIDENTIFIER";;
	*) cat;;
esac
exit 0


#==[ Configuration File ]===========================#
# /etc/cron.monthly/btrfs-scrub.sh
umask 022
PATH=/sbin:/bin:/usr/sbin:/usr/bin
export PATH
if [ -f /etc/sysconfig/btrfsmaintenance ] ; then
    . /etc/sysconfig/btrfsmaintenance
fi
LOGIDENTIFIER='btrfs-scrub'
readonly=
if [ "$BTRFS_SCRUB_READ_ONLY" = "true" ]; then
	readonly=-r
fi
ioprio=
if [ "$BTRFS_SCRUB_PRIORITY" = "normal" ]; then
	ioprio="-c 2 -n 4"
fi
{
OIFS="$IFS"
IFS=:
for MNT in $BTRFS_SCRUB_MOUNTPOINTS; do
	IFS="$OIFS"
	echo "Running scrub on $MNT"
	if [ $(stat -f --format=%T "$MNT") != "btrfs" ]; then
		echo "Path $MNT is not btrfs, skipping"
		continue
	fi
	btrfs scrub start -Bd $ioprio $readonly "$MNT"
	if [ "$?" != "0" ]; then
		echo "Scrub cancelled at $MNT"
		exit 1
	fi
done
} | \
case "$BTRFS_LOG_OUTPUT" in
	stdout) cat;;
	journal) sytemd-cat -t "$LOGIDENTIFIER";;
	*) cat;;
esac
exit 0


#----------------------------------------------------------------#
#==[ Verification ]=================================#
# rpm -V at-3.1.14-2.1.x86_64
# Verification Status: Passed

#==[ Command ]======================================#
# /bin/systemctl status atd.service
atd.service - Deferred execution scheduler
   Loaded: loaded (/usr/lib/systemd/system/atd.service; disabled)
   Active: inactive (dead)


### System at Job File List ###
#==[ Command ]======================================#
# /bin/find -L /var/spool/atjobs/ -type f
/var/spool/atjobs/.SEQ

### System at Job File Content ###
#==[ Configuration File ]===========================#
# /var/spool/atjobs/.SEQ


