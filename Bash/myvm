#!/bin/bash
# Facilitate vm operations via cmdline using the following options:
# stop, start, list, plus VM name as argument
# Example: myvm start vm1
# Author: nefi.munoz@gmail.com

###############################################################################
# Functions
###############################################################################
#=========================================================#
# Display help
#
function display_help {
    echo "Usage: $0 options [arguments]"
    echo "Options:"
    echo "  list                Displays all VMs"
    echo "  start [vm name]     Starts a VM"
    echo "  stop  [vm name]     Gracefully shutdowns a VM"
    echo "  help                Displays this help message"
}

#=========================================================#
# List all VMs
#
function list_vms {            
    echo "Listing VMs"
    sudo virsh list --all 2>$LOG #only send error msg to log
    return $?
}

#=========================================================#
# Start a VM
#
function start_vm {
    local vm_name=$1    
    echo "Starting ${vm_name}"
    sudo virsh start "${vm_name}" &>$LOG #send standard output and errors to log   
    return $?
}

#=========================================================#
# Shutdown a VM
#
function stop_vm {
    local vm_name=$1    
    echo "Shutting down ${vm_name}..."
    sudo virsh shutdown "${vm_name}" &>$LOG # send standard output and errors to log              
    return $?
}

###############################################################################
# Main line code
###############################################################################
LOG=/var/log/myvm.txt
# If log exists from previous run, remove it.
if [[ $(stat $LOG) ]]; then
    sudo rm $LOG 
fi
# Create a new log every time program runs.
sudo touch $LOG
sudo chmod 666 $LOG

# Check if there are no options passed to program
if [ $# -eq 0 ]; then
    echo "***Error: No options provided."
    display_help
    exit 1
fi

# Parse options and arguments
case $1 in
    "list")
        list_vms           
        RC=$?        
        if [[ $RC -eq 0 ]] ;then
            echo "Success listing VMs!" | tee -a $LOG
            exit 0
        else
            echo "***Failed to list VMs. For details, see log at:$LOG" \
                | tee -a $LOG
            exit 1
        fi
        ;;
    "start")
        if [[ -z $2 ]]; then
            display_help
            exit 1
        fi
        start_vm "${2}"
        RC=$? 
        if [[ $RC -eq 0 ]];then
            echo "Success starting: ${2}" | tee -a $LOG
            exit 0
        else
            echo "***Failed to start: ${2}. For details, see log at:$LOG" \
                | tee -a $LOG
            exit 1
        fi
        ;;
    "stop")
        if [[ -z $2 ]]; then
            display_help
            exit 1
        fi
        stop_vm "${2}"
        RC=$?        
        if [[ $RC -eq 0 ]] ;then
            echo "Success stopping ${2}!" | tee -a $LOG
            exit 0
        else
            echo "***Failed to shutdown ${2}. For details, see log at:$LOG" \
                | tee -a $LOG
            exit 1
        fi
        ;;
    "help")
        display_help
        ;;
    *)
        echo "*** Error: Unknown option: \"$1\"."
        display_help
        exit 1
        ;;
esac
exit 0